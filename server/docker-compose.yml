services:
  image_server:
    build:
      context: ./image_server
      dockerfile: Dockerfile
    ports:
      - "8001:8001"  
    networks:
      - my_network
    volumes:
      - ./data:/data 
    environment:
      - CRED_USER_PATH=/run/secrets/cred_user
      - CRED_ADMIN_PATH=/run/secrets/cred_admin
      - EMAIL_CONSTANTS_PATH=/run/secrets/email_constants
      - FIREBASE_CONFIGS_PATH=/run/secrets/firebase_configs
      - TLS_CERT_PATH=/run/secrets/tls_cert_image_server
      - TLS_KEY_PATH=/run/secrets/tls_key_image_server
    secrets:
      - cred_user
      - cred_admin
      - email_constants
      - firebase_configs
      - tls_cert_image_server
      - tls_key_image_server

  ca_server:
    build:
      context: ./ca_server
      dockerfile: Dockerfile
    ports:
      - "8002:8002"  
    networks:
      - my_network
    volumes:
      - ./data:/data 
    environment:
      - CRED_USER_PATH=/run/secrets/cred_user
      - CRED_ADMIN_PATH=/run/secrets/cred_admin
      - FIREBASE_CONFIGS_PATH=/run/secrets/firebase_configs
      - TLS_CERT_PATH=/run/secrets/tls_cert_ca_server
      - TLS_KEY_PATH=/run/secrets/tls_key_ca_server
    secrets:
      - cred_user
      - cred_admin
      - firebase_configs
      - tls_cert_ca_server
      - tls_key_ca_server

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    networks:
      - my_network
    volumes:
      - ./data:/data 

# volumes:
#   shared_data:
#     driver: local  # Named volume for shared data, managed by Docker

secrets:
  email_constants:
    file: ./secrets/email_constants.json
  firebase_configs: 
    file: ./secrets/firebase_configs.json
  tls_cert_image_server:
    file: ./secrets/tls_cert_image_server.pem
  tls_key_image_server:
    file: ./secrets/tls_key_image_server.pem
  tls_cert_ca_server:
    file: ./secrets/tls_cert_ca_server.pem
  tls_key_ca_server:
    file: ./secrets/tls_key_ca_server.pem
  cred_user:
    file: ./secrets/cred_user.json
  cred_admin:
    file: ./secrets/cred_admin.json

networks:
  my_network:
    driver: bridge

